from rates.forecasting.lstm_model import predict_future
from rates.forecasting.linear_regression_model import predict_linear_regression
import pandas as pd
from rates.models import Prediction, Currency
from datetime import datetime


def save_predictions(currency, model_name="lstm", days=10):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –∏–∑–±–µ–≥–∞—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è."""

    print(f"‚ö° –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–ª—è {currency}, –º–æ–¥–µ–ª—å: {model_name}, {days} –¥–Ω–µ–π...")

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö
    Prediction.objects.filter(currency_code__currency_code=currency, model_name=model_name).delete()

    # –í—ã–±–∏—Ä–∞–µ–º –º–µ—Ç–æ–¥ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    if model_name == "lstm":
        result = predict_future(currency, days, "lstm")
        predictions = result["future"]  # —ç—Ç–æ Series —Å –∏–Ω–¥–µ–∫—Å–æ–º datetime –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        dates = predictions.index
        values = predictions.values



    elif model_name == "linear_regression":
        result = predict_linear_regression(currency, days)
        predictions = result["future"]  # <-- –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±—É–¥—É—â–µ–µ
        dates = predictions.index
        values = predictions.values

    else:
        print(f" –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {model_name}")
        return

    if predictions.empty:
        print(f"‚ö† –ù–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¥–ª—è {currency} ({model_name})")
        return

    currency_obj, _ = Currency.objects.get_or_create(currency_code=currency)

    # üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    last_real_data = Prediction.objects.filter(currency_code=currency_obj).order_by("-date").first()
    last_real_date = last_real_data.date if last_real_data else datetime.today().date()

    print(f" –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {last_real_date}")

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    for date_value, value in zip(dates[:days], values[:days]):
        if isinstance(date_value, pd.Timestamp):
            date_value = date_value.date()
        elif isinstance(date_value, datetime):
            date_value = date_value.date()
        elif isinstance(date_value, str):
            date_value = datetime.strptime(date_value, "%Y-%m-%d").date()

        print(f"–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {date_value} - {value} ({model_name})")

        Prediction.objects.create(
            date=date_value,
            currency_code=currency_obj,
            predicted_value=float(value),
            model_name=model_name,
        )

    print(f"–£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–ª—è {currency} ({days} –¥–Ω–µ–π) –ø–æ –º–æ–¥–µ–ª–∏ {model_name}")


if __name__ == "__main__":
    save_predictions("USD", "linear_regression")  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–∏–Ω–µ–π–Ω—É—é —Ä–µ–≥—Ä–µ—Å—Å–∏—é
